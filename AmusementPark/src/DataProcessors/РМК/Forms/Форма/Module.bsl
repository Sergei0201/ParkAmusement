
#Область ОбработчикиСобытийФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура БаллыКСписаниюПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПозицииПродажи
&НаКлиенте
Процедура ПозицииПродажиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если ТипЗнч(ПараметрыПеретаскивания) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьУникальныеПозицию(ПараметрыПеретаскивания.Номенклатура, ПараметрыПеретаскивания.Цена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиНоменклатураПриИзменении(Элемент)
	ТекДанные = Элементы.ПозицииПродажи.ТекущиеДанные;
	ТекДанные.Цена = ЦенаНоменклатуры(ТекДанные.Номенклатура);
	РассчитатьСуммуСтроки(ТекДанные);
КонецПроцедуры


&НаКлиенте
Процедура ПозицииПродажиЦенаПриИзменении(Элемент)
	ТекДанные = Элементы.ПозицииПродажи.ТекущиеДанные;
	РассчитатьСуммуСтроки(ТекДанные);
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.ПозицииПродажи.ТекущиеДанные;
	РассчитатьСуммуСтроки(ТекДанные);
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
		
	ПараметрыПеретаскивания = Новый Структура;
	ПараметрыПеретаскивания.Вставить("Номенклатура", ДанныеСтроки.Номенклатура);	
	ПараметрыПеретаскивания.Вставить("Цена", ДанныеСтроки.Цена);	
	
		
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьУникальныеПозицию(ДанныеСтроки, ДанныеСтроки.Цена);
	
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы

// Код процедур и функций


&НаКлиенте
Процедура ЗаписатьПродажу(Команда)
	НовыйДокумент = ЗаписатьПродажуНаСервере();
	
	ОповеститьОбИзменении(НовыйДокумент);
	
	ПоказатьОповещениеПользователя("Создан Документ", 
		ПолучитьНавигационнуюСсылку(НовыйДокумент),
		Строка(НовыйДокумент));
	ПозицииПродажи.Очистить();	
	СуммаИтого = 0;
	БаллыКСписанию = 0;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьУникальныеПозицию(Номенклатура, Цена)
	
	Фильтр = Новый Структура;
	Фильтр.Вставить("Номенклатура", Номенклатура);
	
	НайденнаяСтрока = ПозицииПродажи.НайтиСтроки(Фильтр);
	Если НайденнаяСтрока.Количество() <> 0 Тогда
		Возврат;
	КонецЕсли;
		
	Строка = ПозицииПродажи.Добавить();
	Строка.Номенклатура = Номенклатура.Номенклатура;
	Строка.Цена = Цена;
	Строка.Количество = 1;
	Строка.Сумма = Строка.Цена;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ЦенаНоменклатуры(Знач Номенклатура)
	
	Возврат РегистрыСведений.ЦеныНоменклатуры.ЦенаНоменклатуры(Номенклатура, ТекущаяДатаСеанса());
	
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ДанныеСтроки)
	ДанныеСтроки.Сумма = ДанныеСтроки.Количество * ДанныеСтроки.Цена;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	СуммаИтого = ПозицииПродажи.Итог("Сумма") - БаллыКСписанию;
КонецПроцедуры

&НаСервере
Функция ЗаписатьПродажуНаСервере()
	
	ДокОбъект = Документы.ПродажаБилета.СоздатьДокумент();
	
	ДокОбъект.Заполнить(Неопределено);
	
	ДокОбъект.Клиент = Клиент;
	ДокОбъект.Дата = ТекущаяДатаСеанса();
	ДокОбъект.ПозицииПродажи.Загрузить(ПозицииПродажи.Выгрузить());
	ДокОбъект.БаллыКСписанию = БаллыКСписанию;
	ДокОбъект.СуммаДокумента = СуммаИтого;
	Если Не ДокОбъект.ПроверитьЗаполнение() Тогда
		ВызватьИсключение "Не удалось записать продажу";
	КонецЕсли;
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции
#КонецОбласти
